/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package core.views;

import core.models.Flight;
import core.models.Location;
import core.models.Passenger;
import core.models.Plane;
import core.models.storage.StorageLocations;
import core.models.storage.StoragePassengers;
import core.models.storage.StoragePlanes;
import java.awt.Color;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.util.ArrayList;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import org.netbeans.lib.awtextra.AbsoluteLayout;
import org.netbeans.lib.awtextra.AbsoluteConstraints;


/**
 *
 * @author edangulo
 */
public class AirportFrame extends javax.swing.JFrame {

    /**
     * Creates new form AirportFrame
     */
    private int x, y;
    private ArrayList<Passenger> passengers;
    private ArrayList<Plane> planes;
    private ArrayList<Location> locations;
    private ArrayList<Flight> flights;

    public AirportFrame() {
        initComponents();
        cargarPassengers();
        cargarLocations();
        cargarPlanes();

        this.passengers = new ArrayList<>();
        this.planes = new ArrayList<>();
        this.locations = new ArrayList<>();
        this.flights = new ArrayList<>();

        this.setBackground(new Color(0, 0, 0, 0));
        this.setLocationRelativeTo(null);

        this.generateMonths();
        this.generateDays();
        this.generateHours();
        this.generateMinutes();
        this.blockPanels();
    }
    
    private void cargarPassengers(){
        boolean cargado = StoragePassengers.getInstance().loadFromJson("json/passengers.json");

        if(cargado){
            System.out.println("Pasajeros cargados correctamente");            
        }else{
            System.out.println("No se pudieron cargar los pasajeros");
                    }       
    }
    private void cargarLocations(){
        boolean cargado = StorageLocations.getInstance().loadFromJson("json/locations.json");

        if(cargado){
            System.out.println("Locations cargados correctamente");            
        }else{
            System.out.println("No se pudieron cargar Locations");
                    }  
    }
    private void cargarPlanes(){
        boolean cargado = StoragePlanes.getInstance().loadFromJson("json/planes.json");

        if(cargado){
            System.out.println("Planes cargados correctamente");            
        }else{
            System.out.println("No se pudieron cargar Planes");
                    }  
    }



    private void blockPanels() {
        //9, 11
        for (int i = 1; i < tabbedPane.getTabCount(); i++) {
            if (i != 9 && i != 11) {
                tabbedPane.setEnabledAt(i, false);
            }
        }
    }

    private void generateMonths() {
        for (int i = 1; i < 13; i++) {
            cbPassangerMonth.addItem("" + i);
            cbFlightDepartureMonth.addItem("" + i);
            cbUpdInfoMonth.addItem("" + i);
        }
    }

    private void generateDays() {
        for (int i = 1; i < 32; i++) {
            cbPassangerDay.addItem("" + i);
            cbFlightDepartureDay.addItem("" + i);
            cbUpdInfoday.addItem("" + i);
        }
    }

    private void generateHours() {
        for (int i = 0; i < 24; i++) {
            cbFlightDepartureHour.addItem("" + i);
            cbFlightArrivalDurationHour.addItem("" + i);
            cbFlightScaleDurationHour.addItem("" + i);
            cbDelayFlightHour.addItem("" + i);
        }
    }

    private void generateMinutes() {
        for (int i = 0; i < 60; i++) {
            cbFlightDepartureMinute.addItem("" + i);
            cbFlightArrivalDurationMinute.addItem("" + i);
            cbFlightScaleDurationMinute.addItem("" + i);
            cbDelayFlightMinute.addItem("" + i);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelRound1 = new core.views.PanelRound();
        panelRound2 = new core.views.PanelRound();
        jButton13 = new javax.swing.JButton();
        tabbedPane = new javax.swing.JTabbedPane();
        jPanelAdmin = new javax.swing.JPanel();
        radioButtonUser = new javax.swing.JRadioButton();
        radioButtonAdmin = new javax.swing.JRadioButton();
        cbSelectUser = new javax.swing.JComboBox<>();
        jPanelPassagnerRegistration = new javax.swing.JPanel();
        labelPassangerCountry = new javax.swing.JLabel();
        labelPassangerId = new javax.swing.JLabel();
        labelPassangerFirstName = new javax.swing.JLabel();
        labelPassangerLastName = new javax.swing.JLabel();
        labelPassangerBirthdate = new javax.swing.JLabel();
        hyphen3 = new javax.swing.JLabel();
        txtPassangerCountryCode = new javax.swing.JTextField();
        txtPassangerId = new javax.swing.JTextField();
        txtPassangerYear = new javax.swing.JTextField();
        txtPassangerCountry = new javax.swing.JTextField();
        txtPassangerPhoneNumber = new javax.swing.JTextField();
        labelPassangerPhone = new javax.swing.JLabel();
        hyphen1 = new javax.swing.JLabel();
        txtPassangerLastName = new javax.swing.JTextField();
        hyphen4 = new javax.swing.JLabel();
        cbPassangerMonth = new javax.swing.JComboBox<>();
        txtPassangerFirstName = new javax.swing.JTextField();
        hyphen2 = new javax.swing.JLabel();
        cbPassangerDay = new javax.swing.JComboBox<>();
        btnPassangerRegister = new javax.swing.JButton();
        jPanelAirplaneRegistration = new javax.swing.JPanel();
        labelAirplaneId = new javax.swing.JLabel();
        txtAirplaneId = new javax.swing.JTextField();
        labelAirplaneBrand = new javax.swing.JLabel();
        txtAirplaneBrand = new javax.swing.JTextField();
        txtAirplaneModel = new javax.swing.JTextField();
        labelAirplaneModel = new javax.swing.JLabel();
        txtAirplaneCapacity = new javax.swing.JTextField();
        labelAirplaneCapacity = new javax.swing.JLabel();
        txtAirplaneAirline = new javax.swing.JTextField();
        labelAirplaneAirline = new javax.swing.JLabel();
        btnAirplaneCreate = new javax.swing.JButton();
        jPanelLocationRegistration = new javax.swing.JPanel();
        labelLocationAirportId = new javax.swing.JLabel();
        txtLocationId = new javax.swing.JTextField();
        labelLocationAirportName = new javax.swing.JLabel();
        txtLocationName = new javax.swing.JTextField();
        txtLocationCity = new javax.swing.JTextField();
        labelLocationAirportCity = new javax.swing.JLabel();
        labelLocationAirportCountry = new javax.swing.JLabel();
        txtLocationCountry = new javax.swing.JTextField();
        txtLocationLatitude = new javax.swing.JTextField();
        labelLocationAirportLatitude = new javax.swing.JLabel();
        labelLocationAirporttLongitude = new javax.swing.JLabel();
        txtLocationLongitude = new javax.swing.JTextField();
        btnLocationCreate = new javax.swing.JButton();
        jPanelFlightRegistration = new javax.swing.JPanel();
        labelFlightId = new javax.swing.JLabel();
        txtFlightId = new javax.swing.JTextField();
        labelFlightPlane = new javax.swing.JLabel();
        cbFlightPlane = new javax.swing.JComboBox<>();
        cbFlightDepartureLocation = new javax.swing.JComboBox<>();
        labelFlightDepartureLocation = new javax.swing.JLabel();
        cbFlightArrivalLocation = new javax.swing.JComboBox<>();
        labelFlightArrivalLocation = new javax.swing.JLabel();
        labelFlightScaleLocation = new javax.swing.JLabel();
        cbFlightScaleLocation = new javax.swing.JComboBox<>();
        labelFlightScaleDuraion = new javax.swing.JLabel();
        labelFlightArrivalDuration = new javax.swing.JLabel();
        labelFlightDepartureDate = new javax.swing.JLabel();
        txtFlightDepartureDate = new javax.swing.JTextField();
        hyphenF1 = new javax.swing.JLabel();
        cbFlightDepartureMonth = new javax.swing.JComboBox<>();
        hyphenF2 = new javax.swing.JLabel();
        cbFlightDepartureDay = new javax.swing.JComboBox<>();
        hyphenF3 = new javax.swing.JLabel();
        cbFlightDepartureHour = new javax.swing.JComboBox<>();
        hyphenF4 = new javax.swing.JLabel();
        cbFlightDepartureMinute = new javax.swing.JComboBox<>();
        cbFlightArrivalDurationHour = new javax.swing.JComboBox<>();
        hyphenF5 = new javax.swing.JLabel();
        cbFlightArrivalDurationMinute = new javax.swing.JComboBox<>();
        hyphenF6 = new javax.swing.JLabel();
        cbFlightScaleDurationHour = new javax.swing.JComboBox<>();
        cbFlightScaleDurationMinute = new javax.swing.JComboBox<>();
        btnFlightCreate = new javax.swing.JButton();
        jPanelUpdateInfo = new javax.swing.JPanel();
        labelUpdInfoId = new javax.swing.JLabel();
        txtUpdInfoId = new javax.swing.JTextField();
        labelUpdInfoFirstName = new javax.swing.JLabel();
        txtUpdInfoFirstName = new javax.swing.JTextField();
        labelUpdInfoLastName = new javax.swing.JLabel();
        txtUpdInfoLastName = new javax.swing.JTextField();
        labelUpdInfoBirthdate = new javax.swing.JLabel();
        txtUpdInfoYear = new javax.swing.JTextField();
        cbUpdInfoMonth = new javax.swing.JComboBox<>();
        cbUpdInfoday = new javax.swing.JComboBox<>();
        txtUpdInfoPhone = new javax.swing.JTextField();
        jLabel40 = new javax.swing.JLabel();
        txtUpdInfoCountryCode = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        labelUpdInfoPhone = new javax.swing.JLabel();
        labelUpdInfoCountry = new javax.swing.JLabel();
        txtUpdInfoCountry = new javax.swing.JTextField();
        btnUpdInfoUpdate = new javax.swing.JButton();
        jPanelAddToFlight = new javax.swing.JPanel();
        txtAddFlightId = new javax.swing.JTextField();
        labelAddFlightId = new javax.swing.JLabel();
        labelAddFlightFlight = new javax.swing.JLabel();
        cbAddFlightFlight = new javax.swing.JComboBox<>();
        btnAddFlightAdd = new javax.swing.JButton();
        jPanelShowMyFlights = new javax.swing.JPanel();
        PaneShowMyFlights = new javax.swing.JScrollPane();
        tableShowsMyFlights = new javax.swing.JTable();
        btnShowsMyFlightsRefresh = new javax.swing.JButton();
        jPanelShowAllPassengers = new javax.swing.JPanel();
        paneShowAllPassengers = new javax.swing.JScrollPane();
        tableShowAllPassengers = new javax.swing.JTable();
        btnShowAllPassengersRefresh = new javax.swing.JButton();
        jPanelShowsAllFlights = new javax.swing.JPanel();
        paneShowAllFlights = new javax.swing.JScrollPane();
        tabelShowAllFlights = new javax.swing.JTable();
        btnShowAllFlightsRefresh = new javax.swing.JButton();
        jPanelShowsAllPlanes = new javax.swing.JPanel();
        btnShowAllPlanesRefresh = new javax.swing.JButton();
        paneShowAllPlanes = new javax.swing.JScrollPane();
        tableShowAllPlanes = new javax.swing.JTable();
        jPanelShowAllLocations = new javax.swing.JPanel();
        paneShowAllLocations = new javax.swing.JScrollPane();
        tableShowAllLocations = new javax.swing.JTable();
        btnShowAllLocationsRefresh = new javax.swing.JButton();
        jPanelDelayFlight = new javax.swing.JPanel();
        cbDelayFlightHour = new javax.swing.JComboBox<>();
        labelDelayFlightHours = new javax.swing.JLabel();
        labelDelayFlightId = new javax.swing.JLabel();
        cbDelayFlightId = new javax.swing.JComboBox<>();
        labelDelayFlightMinutes = new javax.swing.JLabel();
        cbDelayFlightMinute = new javax.swing.JComboBox<>();
        btnDelayFlightDelay = new javax.swing.JButton();
        panelRound3 = new core.views.PanelRound();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        panelRound1.setRadius(40);
        panelRound1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        panelRound2.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                panelRound2MouseDragged(evt);
            }
        });
        panelRound2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                panelRound2MousePressed(evt);
            }
        });

        jButton13.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jButton13.setText("X");
        jButton13.setBorderPainted(false);
        jButton13.setContentAreaFilled(false);
        jButton13.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelRound2Layout = new javax.swing.GroupLayout(panelRound2);
        panelRound2.setLayout(panelRound2Layout);
        panelRound2Layout.setHorizontalGroup(
            panelRound2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelRound2Layout.createSequentialGroup()
                .addContainerGap(1083, Short.MAX_VALUE)
                .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
        );
        panelRound2Layout.setVerticalGroup(
            panelRound2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRound2Layout.createSequentialGroup()
                .addComponent(jButton13)
                .addGap(0, 12, Short.MAX_VALUE))
        );

        panelRound1.add(panelRound2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1150, -1));

        tabbedPane.setFont(new java.awt.Font("Yu Gothic UI", 0, 14)); // NOI18N

        jPanelAdmin.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        radioButtonUser.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        radioButtonUser.setText("User");
        radioButtonUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButtonUserActionPerformed(evt);
            }
        });
        jPanelAdmin.add(radioButtonUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 230, -1, -1));

        radioButtonAdmin.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        radioButtonAdmin.setText("Administrator");
        radioButtonAdmin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioButtonAdminActionPerformed(evt);
            }
        });
        jPanelAdmin.add(radioButtonAdmin, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 164, -1, -1));

        cbSelectUser.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        cbSelectUser.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select User" }));
        cbSelectUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbSelectUserActionPerformed(evt);
            }
        });
        jPanelAdmin.add(cbSelectUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 300, 130, -1));

        tabbedPane.addTab("Administration", jPanelAdmin);

        jPanelPassagnerRegistration.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        labelPassangerCountry.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        labelPassangerCountry.setText("Country:");
        jPanelPassagnerRegistration.add(labelPassangerCountry, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 400, -1, -1));

        labelPassangerId.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        labelPassangerId.setText("ID:");
        jPanelPassagnerRegistration.add(labelPassangerId, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 90, -1, -1));

        labelPassangerFirstName.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        labelPassangerFirstName.setText("First Name:");
        jPanelPassagnerRegistration.add(labelPassangerFirstName, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 160, -1, -1));

        labelPassangerLastName.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        labelPassangerLastName.setText("Last Name:");
        jPanelPassagnerRegistration.add(labelPassangerLastName, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 220, -1, -1));

        labelPassangerBirthdate.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        labelPassangerBirthdate.setText("Birthdate:");
        jPanelPassagnerRegistration.add(labelPassangerBirthdate, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 280, -1, -1));

        hyphen3.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        hyphen3.setText("+");
        jPanelPassagnerRegistration.add(hyphen3, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 340, 20, -1));

        txtPassangerCountryCode.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jPanelPassagnerRegistration.add(txtPassangerCountryCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 340, 50, -1));

        txtPassangerId.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jPanelPassagnerRegistration.add(txtPassangerId, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 90, 130, -1));

        txtPassangerYear.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jPanelPassagnerRegistration.add(txtPassangerYear, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 280, 90, -1));

        txtPassangerCountry.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jPanelPassagnerRegistration.add(txtPassangerCountry, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 400, 130, -1));

        txtPassangerPhoneNumber.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jPanelPassagnerRegistration.add(txtPassangerPhoneNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 340, 130, -1));

        labelPassangerPhone.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        labelPassangerPhone.setText("Phone:");
        jPanelPassagnerRegistration.add(labelPassangerPhone, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 340, -1, -1));

        hyphen1.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        hyphen1.setText("-");
        jPanelPassagnerRegistration.add(hyphen1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 280, 30, -1));

        txtPassangerLastName.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jPanelPassagnerRegistration.add(txtPassangerLastName, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 220, 130, -1));

        hyphen4.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        hyphen4.setText("-");
        jPanelPassagnerRegistration.add(hyphen4, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 340, 30, -1));

        cbPassangerMonth.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        cbPassangerMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Month" }));
        cbPassangerMonth.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbPassangerMonthActionPerformed(evt);
            }
        });
        jPanelPassagnerRegistration.add(cbPassangerMonth, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 280, -1, -1));

        txtPassangerFirstName.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jPanelPassagnerRegistration.add(txtPassangerFirstName, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 160, 130, -1));

        hyphen2.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        hyphen2.setText("-");
        jPanelPassagnerRegistration.add(hyphen2, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 280, 30, -1));

        cbPassangerDay.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        cbPassangerDay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Day" }));
        jPanelPassagnerRegistration.add(cbPassangerDay, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 280, -1, -1));

        btnPassangerRegister.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        btnPassangerRegister.setText("Register");
        btnPassangerRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPassangerRegisterActionPerformed(evt);
            }
        });
        jPanelPassagnerRegistration.add(btnPassangerRegister, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 480, -1, -1));

        tabbedPane.addTab("Passenger registration", jPanelPassagnerRegistration);

        jPanelAirplaneRegistration.setLayout(null);

        labelAirplaneId.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        labelAirplaneId.setText("ID:");
        jPanelAirplaneRegistration.add(labelAirplaneId);
        labelAirplaneId.setBounds(53, 96, 22, 25);

        txtAirplaneId.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jPanelAirplaneRegistration.add(txtAirplaneId);
        txtAirplaneId.setBounds(180, 93, 130, 31);

        labelAirplaneBrand.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        labelAirplaneBrand.setText("Brand:");
        jPanelAirplaneRegistration.add(labelAirplaneBrand);
        labelAirplaneBrand.setBounds(53, 157, 50, 25);

        txtAirplaneBrand.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jPanelAirplaneRegistration.add(txtAirplaneBrand);
        txtAirplaneBrand.setBounds(180, 154, 130, 31);

        txtAirplaneModel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jPanelAirplaneRegistration.add(txtAirplaneModel);
        txtAirplaneModel.setBounds(180, 213, 130, 31);

        labelAirplaneModel.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        labelAirplaneModel.setText("Model:");
        jPanelAirplaneRegistration.add(labelAirplaneModel);
        labelAirplaneModel.setBounds(53, 216, 55, 25);

        txtAirplaneCapacity.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jPanelAirplaneRegistration.add(txtAirplaneCapacity);
        txtAirplaneCapacity.setBounds(180, 273, 130, 31);

        labelAirplaneCapacity.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        labelAirplaneCapacity.setText("Max Capacity:");
        jPanelAirplaneRegistration.add(labelAirplaneCapacity);
        labelAirplaneCapacity.setBounds(53, 276, 109, 25);

        txtAirplaneAirline.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jPanelAirplaneRegistration.add(txtAirplaneAirline);
        txtAirplaneAirline.setBounds(180, 333, 130, 31);

        labelAirplaneAirline.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        labelAirplaneAirline.setText("Airline:");
        jPanelAirplaneRegistration.add(labelAirplaneAirline);
        labelAirplaneAirline.setBounds(53, 336, 70, 25);

        btnAirplaneCreate.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        btnAirplaneCreate.setText("Create");
        btnAirplaneCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAirplaneCreateActionPerformed(evt);
            }
        });
        jPanelAirplaneRegistration.add(btnAirplaneCreate);
        btnAirplaneCreate.setBounds(490, 480, 120, 40);

        tabbedPane.addTab("Airplane registration", jPanelAirplaneRegistration);

        labelLocationAirportId.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        labelLocationAirportId.setText("Airport ID:");

        txtLocationId.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        labelLocationAirportName.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        labelLocationAirportName.setText("Airport name:");

        txtLocationName.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        txtLocationCity.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        labelLocationAirportCity.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        labelLocationAirportCity.setText("Airport city:");

        labelLocationAirportCountry.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        labelLocationAirportCountry.setText("Airport country:");

        txtLocationCountry.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        txtLocationLatitude.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        labelLocationAirportLatitude.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        labelLocationAirportLatitude.setText("Airport latitude:");

        labelLocationAirporttLongitude.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        labelLocationAirporttLongitude.setText("Airport longitude:");

        txtLocationLongitude.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        btnLocationCreate.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        btnLocationCreate.setText("Create");
        btnLocationCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLocationCreateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelLocationRegistrationLayout = new javax.swing.GroupLayout(jPanelLocationRegistration);
        jPanelLocationRegistration.setLayout(jPanelLocationRegistrationLayout);
        jPanelLocationRegistrationLayout.setHorizontalGroup(
            jPanelLocationRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLocationRegistrationLayout.createSequentialGroup()
                .addGroup(jPanelLocationRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelLocationRegistrationLayout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(jPanelLocationRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelLocationAirportId)
                            .addComponent(labelLocationAirportName)
                            .addComponent(labelLocationAirportCity)
                            .addComponent(labelLocationAirportCountry)
                            .addComponent(labelLocationAirportLatitude)
                            .addComponent(labelLocationAirporttLongitude))
                        .addGap(80, 80, 80)
                        .addGroup(jPanelLocationRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtLocationLongitude, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtLocationId, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtLocationName, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtLocationCity, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtLocationCountry, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtLocationLatitude, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanelLocationRegistrationLayout.createSequentialGroup()
                        .addGap(515, 515, 515)
                        .addComponent(btnLocationCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(515, 515, 515))
        );
        jPanelLocationRegistrationLayout.setVerticalGroup(
            jPanelLocationRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelLocationRegistrationLayout.createSequentialGroup()
                .addGap(71, 71, 71)
                .addGroup(jPanelLocationRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanelLocationRegistrationLayout.createSequentialGroup()
                        .addComponent(labelLocationAirportId)
                        .addGap(36, 36, 36)
                        .addComponent(labelLocationAirportName)
                        .addGap(34, 34, 34)
                        .addComponent(labelLocationAirportCity)
                        .addGap(35, 35, 35)
                        .addComponent(labelLocationAirportCountry)
                        .addGap(35, 35, 35)
                        .addComponent(labelLocationAirportLatitude))
                    .addGroup(jPanelLocationRegistrationLayout.createSequentialGroup()
                        .addComponent(txtLocationId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(txtLocationName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(txtLocationCity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(txtLocationCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(txtLocationLatitude, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(44, 44, 44)
                .addGroup(jPanelLocationRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelLocationAirporttLongitude)
                    .addComponent(txtLocationLongitude, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                .addComponent(btnLocationCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47))
        );

        tabbedPane.addTab("Location registration", jPanelLocationRegistration);

        labelFlightId.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        labelFlightId.setText("ID:");

        txtFlightId.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        labelFlightPlane.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        labelFlightPlane.setText("Plane:");

        cbFlightPlane.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        cbFlightPlane.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Plane" }));
        cbFlightPlane.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbFlightPlaneActionPerformed(evt);
            }
        });

        cbFlightDepartureLocation.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        cbFlightDepartureLocation.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Location" }));

        labelFlightDepartureLocation.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        labelFlightDepartureLocation.setText("Departure location:");

        cbFlightArrivalLocation.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        cbFlightArrivalLocation.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Location" }));

        labelFlightArrivalLocation.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        labelFlightArrivalLocation.setText("Arrival location:");

        labelFlightScaleLocation.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        labelFlightScaleLocation.setText("Scale location:");

        cbFlightScaleLocation.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        cbFlightScaleLocation.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Location" }));

        labelFlightScaleDuraion.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        labelFlightScaleDuraion.setText("Duration:");

        labelFlightArrivalDuration.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        labelFlightArrivalDuration.setText("Duration:");

        labelFlightDepartureDate.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        labelFlightDepartureDate.setText("Departure date:");

        txtFlightDepartureDate.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        hyphenF1.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        hyphenF1.setText("-");

        cbFlightDepartureMonth.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        cbFlightDepartureMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Month" }));

        hyphenF2.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        hyphenF2.setText("-");

        cbFlightDepartureDay.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        cbFlightDepartureDay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Day" }));

        hyphenF3.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        hyphenF3.setText("-");

        cbFlightDepartureHour.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        cbFlightDepartureHour.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hour" }));

        hyphenF4.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        hyphenF4.setText("-");

        cbFlightDepartureMinute.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        cbFlightDepartureMinute.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Minute" }));

        cbFlightArrivalDurationHour.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        cbFlightArrivalDurationHour.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hour" }));

        hyphenF5.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        hyphenF5.setText("-");

        cbFlightArrivalDurationMinute.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        cbFlightArrivalDurationMinute.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Minute" }));

        hyphenF6.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        hyphenF6.setText("-");

        cbFlightScaleDurationHour.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        cbFlightScaleDurationHour.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hour" }));

        cbFlightScaleDurationMinute.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        cbFlightScaleDurationMinute.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Minute" }));

        btnFlightCreate.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        btnFlightCreate.setText("Create");
        btnFlightCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFlightCreateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelFlightRegistrationLayout = new javax.swing.GroupLayout(jPanelFlightRegistration);
        jPanelFlightRegistration.setLayout(jPanelFlightRegistrationLayout);
        jPanelFlightRegistrationLayout.setHorizontalGroup(
            jPanelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFlightRegistrationLayout.createSequentialGroup()
                .addGap(73, 73, 73)
                .addGroup(jPanelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanelFlightRegistrationLayout.createSequentialGroup()
                        .addComponent(labelFlightScaleLocation)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cbFlightScaleLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelFlightRegistrationLayout.createSequentialGroup()
                        .addComponent(labelFlightArrivalLocation)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cbFlightArrivalLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelFlightRegistrationLayout.createSequentialGroup()
                        .addComponent(labelFlightDepartureLocation)
                        .addGap(46, 46, 46)
                        .addComponent(cbFlightDepartureLocation, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelFlightRegistrationLayout.createSequentialGroup()
                        .addGroup(jPanelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelFlightId)
                            .addComponent(labelFlightPlane))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtFlightId)
                            .addComponent(cbFlightPlane, 0, 130, Short.MAX_VALUE))))
                .addGap(45, 45, 45)
                .addGroup(jPanelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(labelFlightScaleDuraion)
                    .addComponent(labelFlightArrivalDuration)
                    .addComponent(labelFlightDepartureDate))
                .addGap(18, 18, 18)
                .addGroup(jPanelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelFlightRegistrationLayout.createSequentialGroup()
                        .addComponent(txtFlightDepartureDate, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10)
                        .addGroup(jPanelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelFlightRegistrationLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(cbFlightDepartureMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(hyphenF1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(jPanelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(hyphenF2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelFlightRegistrationLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(cbFlightDepartureDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelFlightRegistrationLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(cbFlightDepartureHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(hyphenF3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(jPanelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(hyphenF4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelFlightRegistrationLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(cbFlightDepartureMinute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(30, 30, 30))
                    .addGroup(jPanelFlightRegistrationLayout.createSequentialGroup()
                        .addGroup(jPanelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelFlightRegistrationLayout.createSequentialGroup()
                                .addComponent(cbFlightArrivalDurationHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(14, 14, 14)
                                .addGroup(jPanelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(hyphenF5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanelFlightRegistrationLayout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addComponent(cbFlightArrivalDurationMinute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanelFlightRegistrationLayout.createSequentialGroup()
                                .addComponent(cbFlightScaleDurationHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(14, 14, 14)
                                .addGroup(jPanelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(hyphenF6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanelFlightRegistrationLayout.createSequentialGroup()
                                        .addGap(20, 20, 20)
                                        .addComponent(cbFlightScaleDurationMinute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelFlightRegistrationLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnFlightCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(530, 530, 530))
        );
        jPanelFlightRegistrationLayout.setVerticalGroup(
            jPanelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelFlightRegistrationLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(jPanelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelFlightRegistrationLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(labelFlightId))
                    .addComponent(txtFlightId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(jPanelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelFlightPlane)
                    .addComponent(cbFlightPlane, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbFlightDepartureHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(hyphenF3)
                    .addComponent(hyphenF4)
                    .addComponent(cbFlightDepartureMinute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanelFlightRegistrationLayout.createSequentialGroup()
                        .addGroup(jPanelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(labelFlightDepartureLocation)
                                .addComponent(cbFlightDepartureLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(labelFlightDepartureDate))
                            .addComponent(txtFlightDepartureDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbFlightDepartureMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(hyphenF1)
                            .addComponent(hyphenF2)
                            .addComponent(cbFlightDepartureDay, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38)
                        .addGroup(jPanelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(labelFlightArrivalLocation)
                                .addComponent(cbFlightArrivalLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(labelFlightArrivalDuration))
                            .addComponent(cbFlightArrivalDurationHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(hyphenF5)
                            .addComponent(cbFlightArrivalDurationMinute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(jPanelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbFlightScaleDurationHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(hyphenF6)
                            .addComponent(cbFlightScaleDurationMinute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelFlightRegistrationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(labelFlightScaleLocation)
                                .addComponent(cbFlightScaleLocation, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(labelFlightScaleDuraion)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 134, Short.MAX_VALUE)
                .addComponent(btnFlightCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50))
        );

        tabbedPane.addTab("Flight registration", jPanelFlightRegistration);

        labelUpdInfoId.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        labelUpdInfoId.setText("ID:");

        txtUpdInfoId.setEditable(false);
        txtUpdInfoId.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        txtUpdInfoId.setEnabled(false);

        labelUpdInfoFirstName.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        labelUpdInfoFirstName.setText("First Name:");

        txtUpdInfoFirstName.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        labelUpdInfoLastName.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        labelUpdInfoLastName.setText("Last Name:");

        txtUpdInfoLastName.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        labelUpdInfoBirthdate.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        labelUpdInfoBirthdate.setText("Birthdate:");

        txtUpdInfoYear.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        cbUpdInfoMonth.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        cbUpdInfoMonth.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Month" }));

        cbUpdInfoday.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        cbUpdInfoday.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Day" }));

        txtUpdInfoPhone.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        jLabel40.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel40.setText("-");

        txtUpdInfoCountryCode.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        jLabel41.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        jLabel41.setText("+");

        labelUpdInfoPhone.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        labelUpdInfoPhone.setText("Phone:");

        labelUpdInfoCountry.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        labelUpdInfoCountry.setText("Country:");

        txtUpdInfoCountry.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N

        btnUpdInfoUpdate.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        btnUpdInfoUpdate.setText("Update");
        btnUpdInfoUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdInfoUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelUpdateInfoLayout = new javax.swing.GroupLayout(jPanelUpdateInfo);
        jPanelUpdateInfo.setLayout(jPanelUpdateInfoLayout);
        jPanelUpdateInfoLayout.setHorizontalGroup(
            jPanelUpdateInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelUpdateInfoLayout.createSequentialGroup()
                .addGroup(jPanelUpdateInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelUpdateInfoLayout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addGroup(jPanelUpdateInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelUpdateInfoLayout.createSequentialGroup()
                                .addComponent(labelUpdInfoId)
                                .addGap(108, 108, 108)
                                .addComponent(txtUpdInfoId, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelUpdateInfoLayout.createSequentialGroup()
                                .addComponent(labelUpdInfoFirstName)
                                .addGap(41, 41, 41)
                                .addComponent(txtUpdInfoFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelUpdateInfoLayout.createSequentialGroup()
                                .addComponent(labelUpdInfoLastName)
                                .addGap(43, 43, 43)
                                .addComponent(txtUpdInfoLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelUpdateInfoLayout.createSequentialGroup()
                                .addComponent(labelUpdInfoBirthdate)
                                .addGap(55, 55, 55)
                                .addComponent(txtUpdInfoYear, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(cbUpdInfoMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(cbUpdInfoday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelUpdateInfoLayout.createSequentialGroup()
                                .addComponent(labelUpdInfoPhone)
                                .addGap(56, 56, 56)
                                .addComponent(jLabel41, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(txtUpdInfoCountryCode, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20)
                                .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(txtUpdInfoPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelUpdateInfoLayout.createSequentialGroup()
                                .addComponent(labelUpdInfoCountry)
                                .addGap(63, 63, 63)
                                .addComponent(txtUpdInfoCountry, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanelUpdateInfoLayout.createSequentialGroup()
                        .addGap(507, 507, 507)
                        .addComponent(btnUpdInfoUpdate)))
                .addContainerGap(586, Short.MAX_VALUE))
        );
        jPanelUpdateInfoLayout.setVerticalGroup(
            jPanelUpdateInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelUpdateInfoLayout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(jPanelUpdateInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelUpdInfoId)
                    .addComponent(txtUpdInfoId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addGroup(jPanelUpdateInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelUpdInfoFirstName)
                    .addComponent(txtUpdInfoFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanelUpdateInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelUpdInfoLastName)
                    .addComponent(txtUpdInfoLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanelUpdateInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelUpdInfoBirthdate)
                    .addComponent(txtUpdInfoYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbUpdInfoMonth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbUpdInfoday, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanelUpdateInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelUpdInfoPhone)
                    .addComponent(jLabel41)
                    .addComponent(txtUpdInfoCountryCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel40)
                    .addComponent(txtUpdInfoPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanelUpdateInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelUpdInfoCountry)
                    .addComponent(txtUpdInfoCountry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(btnUpdInfoUpdate)
                .addGap(113, 113, 113))
        );

        tabbedPane.addTab("Update info", jPanelUpdateInfo);

        txtAddFlightId.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        txtAddFlightId.setEnabled(false);

        labelAddFlightId.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        labelAddFlightId.setText("ID:");

        labelAddFlightFlight.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        labelAddFlightFlight.setText("Flight:");

        cbAddFlightFlight.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        cbAddFlightFlight.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Flight" }));

        btnAddFlightAdd.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        btnAddFlightAdd.setText("Add");
        btnAddFlightAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddFlightAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelAddToFlightLayout = new javax.swing.GroupLayout(jPanelAddToFlight);
        jPanelAddToFlight.setLayout(jPanelAddToFlightLayout);
        jPanelAddToFlightLayout.setHorizontalGroup(
            jPanelAddToFlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAddToFlightLayout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(jPanelAddToFlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelAddFlightId)
                    .addComponent(labelAddFlightFlight))
                .addGap(79, 79, 79)
                .addGroup(jPanelAddToFlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbAddFlightFlight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtAddFlightId, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(860, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelAddToFlightLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnAddFlightAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(509, 509, 509))
        );
        jPanelAddToFlightLayout.setVerticalGroup(
            jPanelAddToFlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAddToFlightLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(jPanelAddToFlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelAddToFlightLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(labelAddFlightId))
                    .addComponent(txtAddFlightId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(35, 35, 35)
                .addGroup(jPanelAddToFlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelAddFlightFlight)
                    .addComponent(cbAddFlightFlight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 288, Short.MAX_VALUE)
                .addComponent(btnAddFlightAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(85, 85, 85))
        );

        tabbedPane.addTab("Add to flight", jPanelAddToFlight);

        tableShowsMyFlights.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        tableShowsMyFlights.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "Departure Date", "Arrival Date"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        PaneShowMyFlights.setViewportView(tableShowsMyFlights);

        btnShowsMyFlightsRefresh.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        btnShowsMyFlightsRefresh.setText("Refresh");
        btnShowsMyFlightsRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowsMyFlightsRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelShowMyFlightsLayout = new javax.swing.GroupLayout(jPanelShowMyFlights);
        jPanelShowMyFlights.setLayout(jPanelShowMyFlightsLayout);
        jPanelShowMyFlightsLayout.setHorizontalGroup(
            jPanelShowMyFlightsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelShowMyFlightsLayout.createSequentialGroup()
                .addGap(269, 269, 269)
                .addComponent(PaneShowMyFlights, javax.swing.GroupLayout.PREFERRED_SIZE, 590, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(322, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelShowMyFlightsLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnShowsMyFlightsRefresh)
                .addGap(527, 527, 527))
        );
        jPanelShowMyFlightsLayout.setVerticalGroup(
            jPanelShowMyFlightsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelShowMyFlightsLayout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(PaneShowMyFlights, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(btnShowsMyFlightsRefresh)
                .addContainerGap())
        );

        tabbedPane.addTab("Show my flights", jPanelShowMyFlights);

        tableShowAllPassengers.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        tableShowAllPassengers.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Birthdate", "Age", "Phone", "Country", "Num Flight"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Long.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        paneShowAllPassengers.setViewportView(tableShowAllPassengers);

        btnShowAllPassengersRefresh.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        btnShowAllPassengersRefresh.setText("Refresh");
        btnShowAllPassengersRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowAllPassengersRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelShowAllPassengersLayout = new javax.swing.GroupLayout(jPanelShowAllPassengers);
        jPanelShowAllPassengers.setLayout(jPanelShowAllPassengersLayout);
        jPanelShowAllPassengersLayout.setHorizontalGroup(
            jPanelShowAllPassengersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelShowAllPassengersLayout.createSequentialGroup()
                .addGroup(jPanelShowAllPassengersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelShowAllPassengersLayout.createSequentialGroup()
                        .addGap(489, 489, 489)
                        .addComponent(btnShowAllPassengersRefresh))
                    .addGroup(jPanelShowAllPassengersLayout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(paneShowAllPassengers, javax.swing.GroupLayout.PREFERRED_SIZE, 1078, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(56, Short.MAX_VALUE))
        );
        jPanelShowAllPassengersLayout.setVerticalGroup(
            jPanelShowAllPassengersLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelShowAllPassengersLayout.createSequentialGroup()
                .addContainerGap(72, Short.MAX_VALUE)
                .addComponent(paneShowAllPassengers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnShowAllPassengersRefresh)
                .addContainerGap())
        );

        tabbedPane.addTab("Show all passengers", jPanelShowAllPassengers);

        tabelShowAllFlights.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        tabelShowAllFlights.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Departure Airport ID", "Arrival Airport ID", "Scale Airport ID", "Departure Date", "Arrival Date", "Plane ID", "Number Passengers"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        paneShowAllFlights.setViewportView(tabelShowAllFlights);

        btnShowAllFlightsRefresh.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        btnShowAllFlightsRefresh.setText("Refresh");
        btnShowAllFlightsRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowAllFlightsRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelShowsAllFlightsLayout = new javax.swing.GroupLayout(jPanelShowsAllFlights);
        jPanelShowsAllFlights.setLayout(jPanelShowsAllFlightsLayout);
        jPanelShowsAllFlightsLayout.setHorizontalGroup(
            jPanelShowsAllFlightsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelShowsAllFlightsLayout.createSequentialGroup()
                .addGroup(jPanelShowsAllFlightsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelShowsAllFlightsLayout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(paneShowAllFlights, javax.swing.GroupLayout.PREFERRED_SIZE, 1100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelShowsAllFlightsLayout.createSequentialGroup()
                        .addGap(521, 521, 521)
                        .addComponent(btnShowAllFlightsRefresh)))
                .addContainerGap(52, Short.MAX_VALUE))
        );
        jPanelShowsAllFlightsLayout.setVerticalGroup(
            jPanelShowsAllFlightsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelShowsAllFlightsLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addComponent(paneShowAllFlights, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnShowAllFlightsRefresh)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        tabbedPane.addTab("Show all flights", jPanelShowsAllFlights);

        btnShowAllPlanesRefresh.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        btnShowAllPlanesRefresh.setText("Refresh");
        btnShowAllPlanesRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowAllPlanesRefreshActionPerformed(evt);
            }
        });

        tableShowAllPlanes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Brand", "Model", "Max Capacity", "Airline", "Number Flights"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        paneShowAllPlanes.setViewportView(tableShowAllPlanes);

        javax.swing.GroupLayout jPanelShowsAllPlanesLayout = new javax.swing.GroupLayout(jPanelShowsAllPlanes);
        jPanelShowsAllPlanes.setLayout(jPanelShowsAllPlanesLayout);
        jPanelShowsAllPlanesLayout.setHorizontalGroup(
            jPanelShowsAllPlanesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelShowsAllPlanesLayout.createSequentialGroup()
                .addGroup(jPanelShowsAllPlanesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelShowsAllPlanesLayout.createSequentialGroup()
                        .addGap(508, 508, 508)
                        .addComponent(btnShowAllPlanesRefresh))
                    .addGroup(jPanelShowsAllPlanesLayout.createSequentialGroup()
                        .addGap(145, 145, 145)
                        .addComponent(paneShowAllPlanes, javax.swing.GroupLayout.PREFERRED_SIZE, 816, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(220, Short.MAX_VALUE))
        );
        jPanelShowsAllPlanesLayout.setVerticalGroup(
            jPanelShowsAllPlanesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelShowsAllPlanesLayout.createSequentialGroup()
                .addContainerGap(45, Short.MAX_VALUE)
                .addComponent(paneShowAllPlanes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(btnShowAllPlanesRefresh)
                .addGap(17, 17, 17))
        );

        tabbedPane.addTab("Show all planes", jPanelShowsAllPlanes);

        tableShowAllLocations.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Airport ID", "Airport Name", "City", "Country"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        paneShowAllLocations.setViewportView(tableShowAllLocations);

        btnShowAllLocationsRefresh.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        btnShowAllLocationsRefresh.setText("Refresh");
        btnShowAllLocationsRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnShowAllLocationsRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelShowAllLocationsLayout = new javax.swing.GroupLayout(jPanelShowAllLocations);
        jPanelShowAllLocations.setLayout(jPanelShowAllLocationsLayout);
        jPanelShowAllLocationsLayout.setHorizontalGroup(
            jPanelShowAllLocationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelShowAllLocationsLayout.createSequentialGroup()
                .addGroup(jPanelShowAllLocationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelShowAllLocationsLayout.createSequentialGroup()
                        .addGap(508, 508, 508)
                        .addComponent(btnShowAllLocationsRefresh))
                    .addGroup(jPanelShowAllLocationsLayout.createSequentialGroup()
                        .addGap(226, 226, 226)
                        .addComponent(paneShowAllLocations, javax.swing.GroupLayout.PREFERRED_SIZE, 652, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(303, Short.MAX_VALUE))
        );
        jPanelShowAllLocationsLayout.setVerticalGroup(
            jPanelShowAllLocationsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelShowAllLocationsLayout.createSequentialGroup()
                .addContainerGap(48, Short.MAX_VALUE)
                .addComponent(paneShowAllLocations, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(btnShowAllLocationsRefresh)
                .addGap(17, 17, 17))
        );

        tabbedPane.addTab("Show all locations", jPanelShowAllLocations);

        cbDelayFlightHour.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        cbDelayFlightHour.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Hour" }));

        labelDelayFlightHours.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        labelDelayFlightHours.setText("Hours:");

        labelDelayFlightId.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        labelDelayFlightId.setText("ID:");

        cbDelayFlightId.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        cbDelayFlightId.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "ID" }));

        labelDelayFlightMinutes.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        labelDelayFlightMinutes.setText("Minutes:");

        cbDelayFlightMinute.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        cbDelayFlightMinute.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Minute" }));

        btnDelayFlightDelay.setFont(new java.awt.Font("Yu Gothic UI", 0, 18)); // NOI18N
        btnDelayFlightDelay.setText("Delay");
        btnDelayFlightDelay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelayFlightDelayActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelDelayFlightLayout = new javax.swing.GroupLayout(jPanelDelayFlight);
        jPanelDelayFlight.setLayout(jPanelDelayFlightLayout);
        jPanelDelayFlightLayout.setHorizontalGroup(
            jPanelDelayFlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDelayFlightLayout.createSequentialGroup()
                .addGap(94, 94, 94)
                .addGroup(jPanelDelayFlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelDelayFlightLayout.createSequentialGroup()
                        .addComponent(labelDelayFlightMinutes)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cbDelayFlightMinute, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelDelayFlightLayout.createSequentialGroup()
                        .addGroup(jPanelDelayFlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelDelayFlightId)
                            .addComponent(labelDelayFlightHours))
                        .addGap(79, 79, 79)
                        .addGroup(jPanelDelayFlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbDelayFlightHour, 0, 136, Short.MAX_VALUE)
                            .addComponent(cbDelayFlightId, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(820, 820, 820))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelDelayFlightLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnDelayFlightDelay)
                .addGap(531, 531, 531))
        );
        jPanelDelayFlightLayout.setVerticalGroup(
            jPanelDelayFlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDelayFlightLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(jPanelDelayFlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelDelayFlightId)
                    .addComponent(cbDelayFlightId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanelDelayFlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelDelayFlightHours)
                    .addComponent(cbDelayFlightHour, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanelDelayFlightLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelDelayFlightMinutes)
                    .addComponent(cbDelayFlightMinute, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 307, Short.MAX_VALUE)
                .addComponent(btnDelayFlightDelay)
                .addGap(33, 33, 33))
        );

        tabbedPane.addTab("Delay flight", jPanelDelayFlight);

        panelRound1.add(tabbedPane, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 41, 1150, 620));

        javax.swing.GroupLayout panelRound3Layout = new javax.swing.GroupLayout(panelRound3);
        panelRound3.setLayout(panelRound3Layout);
        panelRound3Layout.setHorizontalGroup(
            panelRound3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1150, Short.MAX_VALUE)
        );
        panelRound3Layout.setVerticalGroup(
            panelRound3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 36, Short.MAX_VALUE)
        );

        panelRound1.add(panelRound3, new org.netbeans.lib.awtextra.AbsoluteConstraints(-2, 660, 1150, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelRound1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelRound1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents


    private void panelRound2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelRound2MousePressed
        x = evt.getX();
        y = evt.getY();
    }//GEN-LAST:event_panelRound2MousePressed

    private void panelRound2MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_panelRound2MouseDragged
        this.setLocation(this.getLocation().x + evt.getX() - x, this.getLocation().y + evt.getY() - y);
    }//GEN-LAST:event_panelRound2MouseDragged

    private void radioButtonAdminActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioButtonAdminActionPerformed
        if (radioButtonUser.isSelected()) {
            radioButtonUser.setSelected(false);
            cbSelectUser.setSelectedIndex(0);

        }
        for (int i = 1; i < tabbedPane.getTabCount(); i++) {
                tabbedPane.setEnabledAt(i, true);
        }
        tabbedPane.setEnabledAt(5, false);
        tabbedPane.setEnabledAt(6, false);
        tabbedPane.setEnabledAt(7, false);
        
    }//GEN-LAST:event_radioButtonAdminActionPerformed

    private void radioButtonUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioButtonUserActionPerformed
        if (radioButtonAdmin.isSelected()) {
            radioButtonAdmin.setSelected(false);
        }
        for (int i = 1; i < tabbedPane.getTabCount(); i++) {

            tabbedPane.setEnabledAt(i, false);

        }
        tabbedPane.setEnabledAt(9, true);
        tabbedPane.setEnabledAt(5, true);
        tabbedPane.setEnabledAt(6, true);
        tabbedPane.setEnabledAt(7, true);
        tabbedPane.setEnabledAt(11, true);
    }//GEN-LAST:event_radioButtonUserActionPerformed

    private void btnPassangerRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPassangerRegisterActionPerformed
        // TODO add your handling code here:
        long id = Long.parseLong(txtPassangerId.getText());
        String firstname = txtPassangerFirstName.getText();
        String lastname = txtPassangerLastName.getText();
        int year = Integer.parseInt(txtPassangerYear.getText());
        int month = Integer.parseInt(cbPassangerMonth.getItemAt(cbPassangerMonth.getSelectedIndex()));
        int day = Integer.parseInt(cbPassangerDay.getItemAt(cbPassangerDay.getSelectedIndex()));
        int phoneCode = Integer.parseInt(txtPassangerCountryCode.getText());
        long phone = Long.parseLong(txtPassangerPhoneNumber.getText());
        String country = txtPassangerCountry.getText();

        LocalDate birthDate = LocalDate.of(year, month, day);

        this.passengers.add(new Passenger(id, firstname, lastname, birthDate, phoneCode, phone, country));
        this.cbSelectUser.addItem("" + id);
    }//GEN-LAST:event_btnPassangerRegisterActionPerformed

    private void btnAirplaneCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAirplaneCreateActionPerformed
        // TODO add your handling code here:
        String id = txtAirplaneId.getText();
        String brand = txtAirplaneBrand.getText();
        String model = txtAirplaneModel.getText();
        int maxCapacity = Integer.parseInt(txtAirplaneCapacity.getText());
        String airline = txtAirplaneAirline.getText();

        this.planes.add(new Plane(id, brand, model, maxCapacity, airline));

        this.cbFlightPlane.addItem(id);
    }//GEN-LAST:event_btnAirplaneCreateActionPerformed

    private void btnLocationCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLocationCreateActionPerformed
        // TODO add your handling code here:
        String id = txtLocationId.getText();
        String name = txtLocationName.getText();
        String city = txtLocationCity.getText();
        String country = txtLocationCountry.getText();
        double latitude = Double.parseDouble(txtLocationLatitude.getText());
        double longitude = Double.parseDouble(txtLocationLongitude.getText());

        this.locations.add(new Location(id, name, city, country, latitude, longitude));

        this.cbFlightDepartureLocation.addItem(id);
        this.cbFlightArrivalLocation.addItem(id);
        this.cbFlightScaleLocation.addItem(id);
    }//GEN-LAST:event_btnLocationCreateActionPerformed

    private void btnFlightCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFlightCreateActionPerformed
        // TODO add your handling code here:
        String id = txtFlightId.getText();
        String planeId = cbFlightPlane.getItemAt(cbFlightPlane.getSelectedIndex());
        String departureLocationId = cbFlightDepartureLocation.getItemAt(cbFlightDepartureLocation.getSelectedIndex());
        String arrivalLocationId = cbFlightArrivalLocation.getItemAt(cbFlightArrivalLocation.getSelectedIndex());
        String scaleLocationId = cbFlightScaleLocation.getItemAt(cbFlightScaleLocation.getSelectedIndex());
        int year = Integer.parseInt(txtFlightDepartureDate.getText());
        int month = Integer.parseInt(cbFlightDepartureMonth.getItemAt(cbFlightDepartureMonth.getSelectedIndex()));
        int day = Integer.parseInt(cbFlightDepartureDay.getItemAt(cbFlightDepartureDay.getSelectedIndex()));
        int hour = Integer.parseInt(cbFlightDepartureHour.getItemAt(cbFlightDepartureHour.getSelectedIndex()));
        int minutes = Integer.parseInt(cbFlightDepartureMinute.getItemAt(cbFlightDepartureMinute.getSelectedIndex()));
        int hoursDurationsArrival = Integer.parseInt(cbFlightArrivalDurationHour.getItemAt(cbFlightArrivalDurationHour.getSelectedIndex()));
        int minutesDurationsArrival = Integer.parseInt(cbFlightArrivalDurationMinute.getItemAt(cbFlightArrivalDurationMinute.getSelectedIndex()));
        int hoursDurationsScale = Integer.parseInt(cbFlightScaleDurationHour.getItemAt(cbFlightScaleDurationHour.getSelectedIndex()));
        int minutesDurationsScale = Integer.parseInt(cbFlightScaleDurationMinute.getItemAt(cbFlightScaleDurationMinute.getSelectedIndex()));

        LocalDateTime departureDate = LocalDateTime.of(year, month, day, hour, minutes);

        Plane plane = null;
        for (Plane p : this.planes) {
            if (planeId.equals(p.getId())) {
                plane = p;
            }
        }

        Location departure = null;
        Location arrival = null;
        Location scale = null;
        for (Location location : this.locations) {
            if (departureLocationId.equals(location.getAirportId())) {
                departure = location;
            }
            if (arrivalLocationId.equals(location.getAirportId())) {
                arrival = location;
            }
            if (scaleLocationId.equals(location.getAirportId())) {
                scale = location;
            }
        }

        if (scale == null) {
            this.flights.add(new Flight(id, plane, departure, arrival, departureDate, hoursDurationsArrival, minutesDurationsArrival));
        } else {
            this.flights.add(new Flight(id, plane, departure, scale, arrival, departureDate, hoursDurationsArrival, minutesDurationsArrival, hoursDurationsScale, minutesDurationsScale));
        }

        this.cbAddFlightFlight.addItem(id);
    }//GEN-LAST:event_btnFlightCreateActionPerformed

    private void btnUpdInfoUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdInfoUpdateActionPerformed
        // TODO add your handling code here:
        long id = Long.parseLong(txtUpdInfoId.getText());
        String firstname = txtUpdInfoFirstName.getText();
        String lastname = txtUpdInfoLastName.getText();
        int year = Integer.parseInt(txtUpdInfoYear.getText());
        int month = Integer.parseInt(cbPassangerMonth.getItemAt(cbUpdInfoMonth.getSelectedIndex()));
        int day = Integer.parseInt(cbPassangerDay.getItemAt(cbUpdInfoday.getSelectedIndex()));
        int phoneCode = Integer.parseInt(txtUpdInfoCountryCode.getText());
        long phone = Long.parseLong(txtUpdInfoPhone.getText());
        String country = txtUpdInfoCountry.getText();

        LocalDate birthDate = LocalDate.of(year, month, day);

        Passenger passenger = null;
        for (Passenger p : this.passengers) {
            if (p.getId() == id) {
                passenger = p;
            }
        }

        passenger.setFirstname(firstname);
        passenger.setLastname(lastname);
        passenger.setBirthDate(birthDate);
        passenger.setCountryPhoneCode(phoneCode);
        passenger.setPhone(phone);
        passenger.setCountry(country);
    }//GEN-LAST:event_btnUpdInfoUpdateActionPerformed

    private void btnAddFlightAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddFlightAddActionPerformed
        // TODO add your handling code here:
        long passengerId = Long.parseLong(txtAddFlightId.getText());
        String flightId = cbAddFlightFlight.getItemAt(cbAddFlightFlight.getSelectedIndex());

        Passenger passenger = null;
        Flight flight = null;

        for (Passenger p : this.passengers) {
            if (p.getId() == passengerId) {
                passenger = p;
            }
        }

        for (Flight f : this.flights) {
            if (flightId.equals(f.getId())) {
                flight = f;
            }
        }

        passenger.addFlight(flight);
        flight.addPassenger(passenger);
    }//GEN-LAST:event_btnAddFlightAddActionPerformed

    private void btnDelayFlightDelayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelayFlightDelayActionPerformed
        // TODO add your handling code here:
        String flightId = cbDelayFlightId.getItemAt(cbDelayFlightId.getSelectedIndex());
        int hours = Integer.parseInt(cbDelayFlightHour.getItemAt(cbDelayFlightHour.getSelectedIndex()));
        int minutes = Integer.parseInt(cbDelayFlightMinute.getItemAt(cbDelayFlightMinute.getSelectedIndex()));

        Flight flight = null;
        for (Flight f : this.flights) {
            if (flightId.equals(f.getId())) {
                flight = f;
            }
        }

        flight.delay(hours, minutes);
    }//GEN-LAST:event_btnDelayFlightDelayActionPerformed

    private void btnShowsMyFlightsRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowsMyFlightsRefreshActionPerformed
        // TODO add your handling code here:
        long passengerId = Long.parseLong(cbSelectUser.getItemAt(cbSelectUser.getSelectedIndex()));

        Passenger passenger = null;
        for (Passenger p : this.passengers) {
            if (p.getId() == passengerId) {
                passenger = p;
            }
        }

        ArrayList<Flight> flights = passenger.getFlights();
        DefaultTableModel model = (DefaultTableModel) tableShowsMyFlights.getModel();
        model.setRowCount(0);
        for (Flight flight : flights) {
            model.addRow(new Object[]{flight.getId(), flight.getDepartureDate(), flight.calculateArrivalDate()});
        }
    }//GEN-LAST:event_btnShowsMyFlightsRefreshActionPerformed

    private void btnShowAllPassengersRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowAllPassengersRefreshActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tableShowAllPassengers.getModel();
        model.setRowCount(0);
        for (Passenger passenger : this.passengers) {
            model.addRow(new Object[]{passenger.getId(), passenger.getFullname(), passenger.getBirthDate(), passenger.calculateAge(), passenger.generateFullPhone(), passenger.getCountry(), passenger.getNumFlights()});
        }
    }//GEN-LAST:event_btnShowAllPassengersRefreshActionPerformed

    private void btnShowAllFlightsRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowAllFlightsRefreshActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tabelShowAllFlights.getModel();
        model.setRowCount(0);
        for (Flight flight : this.flights) {
            model.addRow(new Object[]{flight.getId(), flight.getDepartureLocation().getAirportId(), flight.getArrivalLocation().getAirportId(), (flight.getScaleLocation() == null ? "-" : flight.getScaleLocation().getAirportId()), flight.getDepartureDate(), flight.calculateArrivalDate(), flight.getPlane().getId(), flight.getNumPassengers()});
        }
    }//GEN-LAST:event_btnShowAllFlightsRefreshActionPerformed

    private void btnShowAllPlanesRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowAllPlanesRefreshActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tableShowAllPlanes.getModel();
        model.setRowCount(0);
        for (Plane plane : this.planes) {
            model.addRow(new Object[]{plane.getId(), plane.getBrand(), plane.getModel(), plane.getMaxCapacity(), plane.getAirline(), plane.getNumFlights()});
        }
    }//GEN-LAST:event_btnShowAllPlanesRefreshActionPerformed

    private void btnShowAllLocationsRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnShowAllLocationsRefreshActionPerformed
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) tableShowAllLocations.getModel();
        model.setRowCount(0);
        for (Location location : this.locations) {
            model.addRow(new Object[]{location.getAirportId(), location.getAirportName(), location.getAirportCity(), location.getAirportCountry()});
        }
    }//GEN-LAST:event_btnShowAllLocationsRefreshActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton13ActionPerformed

    private void cbSelectUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbSelectUserActionPerformed
        try {
            String id = cbSelectUser.getSelectedItem().toString();
            if (! id.equals(cbSelectUser.getItemAt(0))) {
                txtUpdInfoId.setText(id);
                txtAddFlightId.setText(id);
            }
            else{
                txtUpdInfoId.setText("");
                txtAddFlightId.setText("");
            }
        } catch (Exception e) {
        }
    }//GEN-LAST:event_cbSelectUserActionPerformed

    private void cbPassangerMonthActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbPassangerMonthActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbPassangerMonthActionPerformed

    private void cbFlightPlaneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbFlightPlaneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbFlightPlaneActionPerformed

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane PaneShowMyFlights;
    private javax.swing.JButton btnAddFlightAdd;
    private javax.swing.JButton btnAirplaneCreate;
    private javax.swing.JButton btnDelayFlightDelay;
    private javax.swing.JButton btnFlightCreate;
    private javax.swing.JButton btnLocationCreate;
    private javax.swing.JButton btnPassangerRegister;
    private javax.swing.JButton btnShowAllFlightsRefresh;
    private javax.swing.JButton btnShowAllLocationsRefresh;
    private javax.swing.JButton btnShowAllPassengersRefresh;
    private javax.swing.JButton btnShowAllPlanesRefresh;
    private javax.swing.JButton btnShowsMyFlightsRefresh;
    private javax.swing.JButton btnUpdInfoUpdate;
    private javax.swing.JComboBox<String> cbAddFlightFlight;
    private javax.swing.JComboBox<String> cbDelayFlightHour;
    private javax.swing.JComboBox<String> cbDelayFlightId;
    private javax.swing.JComboBox<String> cbDelayFlightMinute;
    private javax.swing.JComboBox<String> cbFlightArrivalDurationHour;
    private javax.swing.JComboBox<String> cbFlightArrivalDurationMinute;
    private javax.swing.JComboBox<String> cbFlightArrivalLocation;
    private javax.swing.JComboBox<String> cbFlightDepartureDay;
    private javax.swing.JComboBox<String> cbFlightDepartureHour;
    private javax.swing.JComboBox<String> cbFlightDepartureLocation;
    private javax.swing.JComboBox<String> cbFlightDepartureMinute;
    private javax.swing.JComboBox<String> cbFlightDepartureMonth;
    private javax.swing.JComboBox<String> cbFlightPlane;
    private javax.swing.JComboBox<String> cbFlightScaleDurationHour;
    private javax.swing.JComboBox<String> cbFlightScaleDurationMinute;
    private javax.swing.JComboBox<String> cbFlightScaleLocation;
    private javax.swing.JComboBox<String> cbPassangerDay;
    private javax.swing.JComboBox<String> cbPassangerMonth;
    private javax.swing.JComboBox<String> cbSelectUser;
    private javax.swing.JComboBox<String> cbUpdInfoMonth;
    private javax.swing.JComboBox<String> cbUpdInfoday;
    private javax.swing.JLabel hyphen1;
    private javax.swing.JLabel hyphen2;
    private javax.swing.JLabel hyphen3;
    private javax.swing.JLabel hyphen4;
    private javax.swing.JLabel hyphenF1;
    private javax.swing.JLabel hyphenF2;
    private javax.swing.JLabel hyphenF3;
    private javax.swing.JLabel hyphenF4;
    private javax.swing.JLabel hyphenF5;
    private javax.swing.JLabel hyphenF6;
    private javax.swing.JButton jButton13;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JPanel jPanelAddToFlight;
    private javax.swing.JPanel jPanelAdmin;
    private javax.swing.JPanel jPanelAirplaneRegistration;
    private javax.swing.JPanel jPanelDelayFlight;
    private javax.swing.JPanel jPanelFlightRegistration;
    private javax.swing.JPanel jPanelLocationRegistration;
    private javax.swing.JPanel jPanelPassagnerRegistration;
    private javax.swing.JPanel jPanelShowAllLocations;
    private javax.swing.JPanel jPanelShowAllPassengers;
    private javax.swing.JPanel jPanelShowMyFlights;
    private javax.swing.JPanel jPanelShowsAllFlights;
    private javax.swing.JPanel jPanelShowsAllPlanes;
    private javax.swing.JPanel jPanelUpdateInfo;
    private javax.swing.JLabel labelAddFlightFlight;
    private javax.swing.JLabel labelAddFlightId;
    private javax.swing.JLabel labelAirplaneAirline;
    private javax.swing.JLabel labelAirplaneBrand;
    private javax.swing.JLabel labelAirplaneCapacity;
    private javax.swing.JLabel labelAirplaneId;
    private javax.swing.JLabel labelAirplaneModel;
    private javax.swing.JLabel labelDelayFlightHours;
    private javax.swing.JLabel labelDelayFlightId;
    private javax.swing.JLabel labelDelayFlightMinutes;
    private javax.swing.JLabel labelFlightArrivalDuration;
    private javax.swing.JLabel labelFlightArrivalLocation;
    private javax.swing.JLabel labelFlightDepartureDate;
    private javax.swing.JLabel labelFlightDepartureLocation;
    private javax.swing.JLabel labelFlightId;
    private javax.swing.JLabel labelFlightPlane;
    private javax.swing.JLabel labelFlightScaleDuraion;
    private javax.swing.JLabel labelFlightScaleLocation;
    private javax.swing.JLabel labelLocationAirportCity;
    private javax.swing.JLabel labelLocationAirportCountry;
    private javax.swing.JLabel labelLocationAirportId;
    private javax.swing.JLabel labelLocationAirportLatitude;
    private javax.swing.JLabel labelLocationAirportName;
    private javax.swing.JLabel labelLocationAirporttLongitude;
    private javax.swing.JLabel labelPassangerBirthdate;
    private javax.swing.JLabel labelPassangerCountry;
    private javax.swing.JLabel labelPassangerFirstName;
    private javax.swing.JLabel labelPassangerId;
    private javax.swing.JLabel labelPassangerLastName;
    private javax.swing.JLabel labelPassangerPhone;
    private javax.swing.JLabel labelUpdInfoBirthdate;
    private javax.swing.JLabel labelUpdInfoCountry;
    private javax.swing.JLabel labelUpdInfoFirstName;
    private javax.swing.JLabel labelUpdInfoId;
    private javax.swing.JLabel labelUpdInfoLastName;
    private javax.swing.JLabel labelUpdInfoPhone;
    private javax.swing.JScrollPane paneShowAllFlights;
    private javax.swing.JScrollPane paneShowAllLocations;
    private javax.swing.JScrollPane paneShowAllPassengers;
    private javax.swing.JScrollPane paneShowAllPlanes;
    private core.views.PanelRound panelRound1;
    private core.views.PanelRound panelRound2;
    private core.views.PanelRound panelRound3;
    private javax.swing.JRadioButton radioButtonAdmin;
    private javax.swing.JRadioButton radioButtonUser;
    private javax.swing.JTabbedPane tabbedPane;
    private javax.swing.JTable tabelShowAllFlights;
    private javax.swing.JTable tableShowAllLocations;
    private javax.swing.JTable tableShowAllPassengers;
    private javax.swing.JTable tableShowAllPlanes;
    private javax.swing.JTable tableShowsMyFlights;
    private javax.swing.JTextField txtAddFlightId;
    private javax.swing.JTextField txtAirplaneAirline;
    private javax.swing.JTextField txtAirplaneBrand;
    private javax.swing.JTextField txtAirplaneCapacity;
    private javax.swing.JTextField txtAirplaneId;
    private javax.swing.JTextField txtAirplaneModel;
    private javax.swing.JTextField txtFlightDepartureDate;
    private javax.swing.JTextField txtFlightId;
    private javax.swing.JTextField txtLocationCity;
    private javax.swing.JTextField txtLocationCountry;
    private javax.swing.JTextField txtLocationId;
    private javax.swing.JTextField txtLocationLatitude;
    private javax.swing.JTextField txtLocationLongitude;
    private javax.swing.JTextField txtLocationName;
    private javax.swing.JTextField txtPassangerCountry;
    private javax.swing.JTextField txtPassangerCountryCode;
    private javax.swing.JTextField txtPassangerFirstName;
    private javax.swing.JTextField txtPassangerId;
    private javax.swing.JTextField txtPassangerLastName;
    private javax.swing.JTextField txtPassangerPhoneNumber;
    private javax.swing.JTextField txtPassangerYear;
    private javax.swing.JTextField txtUpdInfoCountry;
    private javax.swing.JTextField txtUpdInfoCountryCode;
    private javax.swing.JTextField txtUpdInfoFirstName;
    private javax.swing.JTextField txtUpdInfoId;
    private javax.swing.JTextField txtUpdInfoLastName;
    private javax.swing.JTextField txtUpdInfoPhone;
    private javax.swing.JTextField txtUpdInfoYear;
    // End of variables declaration//GEN-END:variables
}
